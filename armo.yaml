apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ingress
  annotations:
    kubernetes.io/ingress.class: "gce"
    kubernetes.io/ingress.global-static-ip-name: gke-public-ip
    networking.gke.io/managed-certificates: managed-certificate
    networking.gke.io/v1beta1.FrontendConfig: ingress-security-config
spec:
  rules:
  - host: domain.com
    http:
      paths:
      - path: /ats
        pathType: ImplementationSpecific
        backend:
          service:
            name: ats
            port: 
              number: 80
      - path: /cds
        pathType: ImplementationSpecific
        backend:
          service:
            name: cds
            port:
              number: 80
---

apiVersion: networking.gke.io/v1beta1
kind: FrontendConfig
metadata:
  name: ingress-security-config
spec:
  sslPolicy: gke-ingress-ssl-policy
  redirectToHttps:
    enabled: true
---

apiVersion: networking.gke.io/v1
kind: ManagedCertificate
metadata:
  name: managed-certificate
spec:
  domains:
    - domain.com

---

apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: cloudarmor
spec:
  securityPolicy:
    name: "my-policy-1"
---
apiVersion: v1
kind: Service
metadata:
  name: ats
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "cloudarmor"}'
spec:
  type: NodePort
  selector:
    app: ats
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ats
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ats
  template:
    metadata:
      labels:
        app: ats
    spec:
      containers:
      - name: ats
        image: us-docker.pkg.dev/google-samples/containers/gke/whereami:v1.2.11
        ports:
          - name: http
            containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1

---
apiVersion: v1
kind: Service
metadata:
  name: cds
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "cloudarmor"}'
spec:
  type: NodePort
  selector:
    app: cds
  ports:
    - port: 80
      protocol: TCP
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cds
spec:
  replicas: 3
  selector:
    matchLabels:
      app: cds
  template:
    metadata:
      labels:
        app: cds
    spec:
      containers:
      - name: cds
        image: us-docker.pkg.dev/google-samples/containers/gke/whereami:v1.2.11
        ports:
          - name: http
            containerPort: 8080
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
